name: Build Caddy

on:
  workflow_dispatch:
  release:
    types:
      - 'prereleased'
      - 'published'
      - 'released'

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        config:
          - name: "windows-386"
            GOARCH: 386
            GOOS: windows
            release: true
          - name: "windows-amd64"
            GOARCH: amd64
            GOOS: windows
            release: true
          - name: "linux-amd64"
            GOARCH: amd64
            GOOS: linux
            release: true
          - name: "linux-arm64"
            GOARCH: arm64
            GOOS: linux
            release: true
          - name: "linux-armv5"
            GOARCH: arm
            GOARM: 5
            GOOS: linux
            release: true
          - name: "linux-s390x"
            GOARCH: s390x
            GOOS: linux
            release: true
          - name: "freebsd-amd64"
            GOARCH: amd64
            GOOS: freebsd
            release: true
          - name: "freebsd-arm64"
            GOARCH: arm64
            GOOS: freebsd
            release: true
          - name: "darwin-amd64"
            GOARCH: amd64
            GOOS: darwin
            release: true
          - name: "darwin-arm64"
            GOARCH: arm64
            GOOS: darwin
            release: true

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Go environment
      uses: actions/setup-go@v5
      with:
        go-version: '1.24'
        check-latest: true

    - name: Install xcaddy
      run: go install github.com/caddyserver/xcaddy/cmd/xcaddy@latest

    - name: Build Caddy
      env:
        GOARCH: ${{ matrix.config.GOARCH }}
        GOOS: ${{ matrix.config.GOOS }}
        GOARM: ${{ matrix.config.GOARM }}
      run: |
        mkdir -p release-tmp
        ~/go/bin/xcaddy build \
          --with github.com/caddyserver/jsonc-adapter \
          --with github.com/mholt/caddy-l4 \
          --with github.com/caddy-dns/duckdns \
          --with github.com/mholt/caddy-events-exec \
          --with github.com/WeidiDeng/caddy-cloudflare-ip \
          --with github.com/caddyserver/forwardproxy=github.com/imgk/forwardproxy@udpinhttp \
          --with github.com/imgk/caddy-trojan@main \
          --with github.com/mholt/caddy-webdav \
          --output ./release-tmp/caddy

    - name: Rename Caddy for Windows
      if: matrix.config.GOOS == 'windows'
      run: mv ./release-tmp/caddy ./release-tmp/caddy.exe

    - name: Calculate SHA256 hash
      run: |
        cd release-tmp
        sha256sum * > sha256

    - name: Package build artifacts
      run: |
        mkdir -p release-ready
        cd release-tmp
        if [[ ${{ matrix.config.GOOS }} == "windows" ]]; then
          zip -r ../release-ready/caddy-${{ matrix.config.name }}.zip *
        else
          tar -zcvf ../release-ready/caddy-${{ matrix.config.name }}.tar.gz *
        fi

    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: caddy-${{ github.sha }}-${{ matrix.config.name }}
        path: ./release-ready/*

    - name: Upload to GitHub Release
      if: github.event_name == 'release' && matrix.config.release
      uses: svenstaro/upload-release-action@v2
      with:
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        file: ./release-ready/caddy-${{ matrix.config.name }}.${
          matrix.config.GOOS == 'windows' ? 'zip' : 'tar.gz'
        }
        tag: ${{ github.ref }}
        overwrite: true
